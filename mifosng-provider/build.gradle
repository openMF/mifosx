buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-tomcat-plugin:0.9.5'
    }
}

apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'tomcat'
apply plugin: 'project-report'

project.ext.springVersion = '3.1.1.RELEASE'
project.ext.springSecurityVersion = '3.1.0.RELEASE'
project.ext.hibernateValidatorVersion = '4.3.0.Final'
project.ext.hibernateCoreVersion = '4.1.3.Final'
project.ext.jerseyVersion = '1.13'
project.ext.springDataJpaVersion = '1.0.3.RELEASE'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://maven.springframework.org/milestone"
    }
    maven {
        url "http://maven.springframework.org/release"
    }
    maven {
        url "http://maven.springframework.org/snapshot"
    }
    maven {
        url "http://download.java.net/maven/2"
    }
    maven {
    	url "http://repository.pentaho.org/artifactory/pentaho/"
    }
    flatDir {
    	dirs '../repos'
    }
}

configurations {
    providedCompile
	compile
	runtime
	all*.exclude group: 'commons-logging'
}

dependencies {
        def tomcatVersion = '7.0.29'
	    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
	           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
	    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
	        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
	    }
	    tomcat "org.apache.tomcat:tomcat-dbcp:${tomcatVersion}"

	providedCompile(
				[group: 'javax.servlet', name: 'servlet-api', version: '2.5'],
			)

	compile(    
	   			[group: 'org.springframework', name: 'spring-core', version: springVersion],
	   			[group: 'org.springframework', name: 'spring-aspects', version: springVersion],
	   			[group: 'org.springframework', name: 'spring-web', version: springVersion],
	   			[group: 'org.springframework.security', name: 'spring-security-core', version: springSecurityVersion],
	   			[group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion],
	   			[group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion],
	            [group: 'org.aspectj', name: 'aspectjrt', version: '1.6.12.RELEASE'],
	            
	            [group: 'org.hibernate', name: 'hibernate-core', version: hibernateCoreVersion],
	            [group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateCoreVersion],
	            [group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'],
	            
	            [group: 'javax.ws.rs', name: 'jsr311-api', version: '1.1.1'],
	            [group: 'com.sun.jersey', name: 'jersey-core', version: jerseyVersion],
	            [group: 'com.sun.jersey', name: 'jersey-servlet', version: jerseyVersion],
	            [group: 'com.sun.jersey', name: 'jersey-server', version: jerseyVersion],
	            [group: 'com.sun.jersey', name: 'jersey-json', version: jerseyVersion],
	            [group: 'com.sun.jersey.contribs', name: 'jersey-spring', version: jerseyVersion],
	            [group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: jerseyVersion],
	            
	            [group: 'com.google.code.gson', name: 'gson', version: '2.2.2'],
	            
	            [group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataJpaVersion],
	            
	            [group: 'joda-time', name: 'joda-time', version: '2.1'],
	            [group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0'],
	            [group: 'org.apache.commons', name: 'commons-email', version: '1.2'],
	            [group: 'commons-lang', name: 'commons-lang', version: '2.4'],
	            
	            [group: 'org.slf4j', name: 'slf4j-api', version: '1.6.6'],
	            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.6.6'],
	            
	            [group: 'ch.qos.logback', name: 'logback-core', version: '1.0.6'],
	            [group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.6'],
	            
	            [group: 'mysql', name: 'mysql-connector-java', version: '5.1.21'],
	            [group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '7.0.29'],
	            
	            [group: 'pentaho-reporting-engine', name: 'pentaho-reporting-engine-classic-core', version: '3.8.3-GA'],
	            [group: 'pentaho-reporting-engine', name: 'pentaho-reporting-engine-classic-extensions', version: '3.8.3-GA'],
				[group: 'pentaho-reporting-engine', name: 'pentaho-reporting-engine-wizard-core', version: '3.8.3-GA'],
	            [group: 'pentaho-report-designer', name: 'pentaho-reporting-engine-wizard-xul', version: '3.8.3-GA'],
	            
	            [group: 'pentaho-library', name: 'libbase', version: '1.2.2'],
 	        	[group: 'pentaho-library',name: 'libdocbundle', version: '1.2.3'],
 	        	[group: 'pentaho-library',name: 'libfonts', version: '1.2.3'],
 	        	[group: 'pentaho-library',name: 'libformat', version: '1.2.4'],
 	        	[group: 'pentaho-library',name: 'libformula', version: '1.2.3'],
 	        	[group: 'pentaho-library',name: 'libloader', version: '1.2.3'],
 	        	[group: 'pentaho-library',name: 'librepository', version: '1.2.3'],
 	        	[group: 'pentaho-library',name: 'libserializer', version: '1.2.2'],
 	        	[group: 'pentaho-library',name: 'libsparkline', version: '1.2.1'],
 	        	[group: 'pentaho-library',name: 'libxml', version: '1.2.2'],
 	        	
 	        	[group: 'org.apache.poi',name: 'poi', version: '3.6'],
 	        	[group: 'org.apache.poi',name: 'poi-ooxml', version: '3.6'],
 	        	[group: 'org.apache.poi',name: 'poi-ooxml-schemas', version: '3.6'],
	            
	            [group: 'com.lowagie', name: 'itext', version: '2.1.7'],
	            [group: 'com.lowagie', name: 'itext-rtf', version: '2.1.7'],
 	        )
 	        
 	 testCompile 'junit:junit:4.10', 
                 'org.mockito:mockito-all:1.9.0',
                 'org.hamcrest:hamcrest-all:1.1'
 	 
}

[tomcatRun, tomcatRunWar, tomcatStop]*.with {
  configFile = file('src/test/resources/META-INF/context.xml')
  httpPort = 8080
  httpsPort = 8443
  stopPort = 8081
  enableSSL = true
}